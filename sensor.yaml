# Weather and calculated/template sensors

# Calculated sensors
- platform: min_max
  name: Ute Temperature
  type: mean
  round_digits: 1
  entity_ids:
    - sensor.sovrum_ute_temperature
    - sensor.malte_ute_temperature
    - sensor.lina_ute_temperature
    - sensor.entre_temperature
    - sensor.friggebod_temperature
#    - sensor.altan_ute_temperature # Gives bad mean value
- platform: min_max
  name: Inne Temperature
  type: mean
  round_digits: 1
  entity_ids:
    - sensor.flygel_temperature
    - sensor.relax_temperature
    - sensor.vardagsrum_temperature
    - sensor.sovrum_temperature
    - sensor.malte_temperature
    - sensor.lina_temperature
#    - sensor.garage_temperature # Gives bad mean value

# # Effekt och energi
# - platform: template
#   sensors:
#     power:
#       friendly_name: Effekt
#       value_template: '{{ ((float(states("sensor.current_1")) + float(states("sensor.current_2")) + float(states("sensor.current_3")))*220) | int }}' # Should've been 236V but this seems more calibrated...
#       unit_of_measurement: W
#       icon_template: mdi:power-plug
# - platform: integration
#   name: Energy
#   source: sensor.power
#   unit_prefix: k
#   round: 2

- platform: template
  sensors:
    wind_direction_text:
      value_template: >
        {% set direction = ['N','NNE','NE','ENE','E','ESE','SE','SSE','S','SSW','SW','WSW','W','WNW','NW','NNW','N'] %}
        {% set degree = states('sensor.wind_direction')|float %}
        {{ direction[((degree+11.25)/22.5)|int] }}

# Energy prices, see https://github.com/custom-components/nordpool
- platform: nordpool

  # Should the prices include vat? Default True
  VAT: True

  # What currency the api fetches the prices in
  # this is only need if you want a sensor in a non local currency
  currency: "SEK"
  
  # Option to show prices in cents (or the equivalent in local currency)
  price_in_cents: false

  # Helper so you can set your "low" price
  # low_price = hour_price < average * low_price_cutoff
  low_price_cutoff: 0.95

  # What power regions your are interested in.
  # Possible values: "DK1", "DK2", "FI", "LT", "LV", "Oslo", "Kr.sand", "Bergen", "Molde", "Tr.heim", "TromsÃ¸", "SE1", "SE2", "SE3","SE4", "SYS", "EE"
  region: "SE3"

  # How many decimals to use in the display of the price
  precision: 1

  # What the price should be displayed in default
  # Possible values: MWh, kWh and Wh
  # default: kWh
  price_type: kWh

  # This option allows the usage of a template to add a tariff.
  # now() always refers start of the hour of that price.
  # this way we can calculate the correct costs add that to graphs etc.
  # The price result of the additional_costs template expects this additional cost to be in kWh and not cents as a float
  # default {{0.0|float}}
  additional_costs: "{{0.0|float}}"