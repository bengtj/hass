# Switch support

# Template switches
- platform: template
  switches:
    ac:
      friendly_name: Luftkonditionering
      value_template: "{{ is_state('input_boolean.ac', 'on') }}"
      turn_on:
        service: input_boolean.turn_on
        data:
          entity_id: input_boolean.ac
      turn_off:
        service: input_boolean.turn_off
        data:
          entity_id: input_boolean.ac

# Flux switches should contain at most 3-4 hue groups to perform reliable.
# I offset the interval to make them issue commands at different times.
# Use hue groups for warm/cold white lights instead of the bulbs for these to work properly.
# Note that all lights in a hue group will be turned on whenever one is on. Cannot use a single large group.
- platform: flux
  name: Flygelflux
  interval: 52
  start_colortemp: 3600
  sunset_colortemp: 3000
  stop_colortemp: 1900
  lights:
    - light.flygelfonster
    - light.flygeltak_1
    - light.flygeltak_2
    - light.flygeltak_3
    - light.flygelgolv
#    - light.bordgo
    - light.signe
- platform: flux
  name: Relaxflux
  interval: 53
  start_colortemp: 3000
  sunset_colortemp: 2000
  stop_colortemp: 1600
  lights:
    - light.skarm
    - light.datatak
    - light.relaxtak
    - light.relaxgang
    - light.relaxannex
- platform: flux
  name: Vardagsflux
  interval: 54
  start_colortemp: 3600
  sunset_colortemp: 3000
  stop_colortemp: 1900
  lights:
    - light.tv
    - light.tak_v
    - light.tak_h
    - light.golvlampa
    - light.altanfonster
- platform: flux
  name: Köksflux
  interval: 55
  start_colortemp: 3000
  sunset_colortemp: 2000
  stop_colortemp: 1600
  lights:
    - light.koksfonster
    - light.matbord_upp
- platform: flux
  name: Sovflux
  interval: 67
  lights:
    - light.sovrumsgang
    - light.sanggavel
    - light.linas_vagg
    - light.maltes_vagg
- platform: flux
  name: Uteflux
  interval: 177
  start_colortemp: 3600
  sunset_colortemp: 3000
  stop_colortemp: 1900
  start_time: '7:00'
  stop_time: '23:45'
  lights:
    - light.halltak
    - light.flygelvagg
    - light.flygelsims_s1
    - light.flygelsims_s2
    - light.flygelsims_s3
    - light.flygelsims_n1
    - light.flygelsims_n2
    - light.flygelsims_n3
    - light.flygelsims_n4
    - light.altanvagg
    - light.altanslinga
    - light.altanstolpe_1
    - light.altanstolpe_2
    - light.altanstolpe_3
    - light.altanfontan
    - light.garageport
    - light.entrevagg
    - light.sexan
    - light.entrestolpe_1
    - light.entrestolpe_2
    - light.entrestolpe_3
    - light.entrestolpe_4
    - light.entrebuske

# Twinkly
- platform: command_line
  switches:
    granen:
      command_on: "python3 /config/python_scripts/twinkly.py 192.168.0.26 on"
      command_off: "python3 /config/python_scripts/twinkly.py 192.168.0.26 off" 
#      command_state: "python3 /config/python_scripts/twinkly.py 192.168.0.26 state" # Will interfere with app; only one login token can be active at once...
      value_template: "{{ value == \"1\" }}"
      friendly_name: Gran-twinkly
- platform: command_line
  switches:
    istappar:
      command_on: "python3 /config/python_scripts/twinkly.py 192.168.0.27 on"
      command_off: "python3 /config/python_scripts/twinkly.py 192.168.0.27 off" 
#      command_state: "python3 /config/python_scripts/twinkly.py 192.168.0.27 state" # Will interfere with app; only one login token can be active at once...
      value_template: "{{ value == \"1\" }}"
      friendly_name: Istapp-twinkly
- platform: command_line
  switches:
    takfot:
      command_on: "python3 /config/python_scripts/twinkly.py 192.168.0.28 on"
      command_off: "python3 /config/python_scripts/twinkly.py 192.168.0.28 off" 
#      command_state: "python3 /config/python_scripts/twinkly.py 192.168.0.28 state" # Will interfere with app; only one login token can be active at once...
      value_template: "{{ value == \"1\" }}"
      friendly_name: Takfot-twinkly

# Manual command for bioduk, see http://wildebeestplain.blogspot.com/2016/12/using-conrad-rsl-sockets-with-rfxcom.html
# - platform: command_line
#   switches:
#     bioduk: # 09130014ddfcc0009a60
#               091300cdddfcc0009a60
#       friendly_name: "Bioduk"
#       command_on: 'echo -ne "\x09\x13\x00\x14\xdd\xfc\x03\x00\x9a\x60" > /dev/ttyUSB0'
#       command_off: 'echo -ne "\x09\x13\x00\x14\xdd\xfc\xc0\x00\x9a\x60" > /dev/ttyUSB0'

# Glue Lock switch w/o support for reading state, adapted from https://github.com/GlueHome/homebridge-plugin
# Create/fetch <api-key> with glue <user>:<pass> according to plugin README: curl --location --request POST 'https://user-api.gluehome.com/v1/api-keys' --header 'Content-Type: application/json' -u <user>:<pass> --data-raw '{ "name": "My Test Key", "scopes": ["events.read", "locks.read", "locks.write"] }'
# Fetch <lock-id> using created <api-key>: curl -L -H "Authorization: Api-Key <api-key>"  https://user-api.gluehome.com/v1/locks
# Test operation <op>=lock/unlock on <lock-id>: curl -L -H "Authorization: Api-Key <api-key>" -H 'Content-Type: application/json' -d '{"type":"<op>"}' https://user-api.gluehome.com/v1/locks/<lock-id>/operations
# Be sure to replace values in <> with your own and append "-v" to curl command to get more info on failure.
# In secrets.yaml you will need to escape "" in json:
# glue_command_on: "curl -L -H 'Authorization: Api-Key <api-key>' -H 'Content-Type: application/json' -d '{\"type\":\"lock\"}' https://user-api.gluehome.com/v1/locks/<lock-id>/operations"
# glue_command_off: "curl -L -H 'Authorization: Api-Key <api-key>' -H 'Content-Type: application/json' -d '{\"type\":\"unlock\"}' https://user-api.gluehome.com/v1/locks/<lock-id>/operations"
- platform: command_line
  switches:
    friggebod_lock:
      friendly_name: "Olåst↓ Friggebod ↑Låst"
      command_on: !secret glue_command_on
      command_off: !secret glue_command_off

# Wake on LAN for SpelTV
- platform: wake_on_lan
  name: SpelTV
  mac: '04:7C:16:5B:81:54'
  host: '192.168.0.7'