# Switch support

# Template switches
- platform: template
  switches:
    ac:
      friendly_name: Luftkonditionering
      value_template: "{{ is_state('input_boolean.ac', 'on') }}"
      turn_on:
        service: input_boolean.turn_on
        data:
          entity_id: input_boolean.ac
      turn_off:
        service: input_boolean.turn_off
        data:
          entity_id: input_boolean.ac

# Flux switches should contain at most 3-4 hue groups to perform reliable.
# I offset the interval to make them issue commands at different times.
# Use hue groups for warm/cold white lights instead of the bulbs for these to work properly.
# Note that all lights in a hue group will be turned on whenever one is on. Cannot use a single large group.
- platform: flux
  name: Dagsflux
  interval: 53
  start_colortemp: 3000
  sunset_colortemp: 2000
  stop_colortemp: 1600
  lights:
    - light.relax
    - light.vardagsrum
    - light.koksfonster
    - light.matbord_upp
- platform: flux
  name: Sovflux
  interval: 67
  lights:
    - light.sovrumsgang
    - light.sanggavel
    - light.linas_vagg
    - light.maltes_vagg
- platform: flux
  name: Uteflux
  interval: 177
  start_time: '7:00'
  stop_time: '23:45'
  lights:
    - light.halltak
    - light.altanvagg
    - light.altanslinga
    - light.altanstolpe_1
    - light.altanstolpe_2
    - light.altanstolpe_3
    - light.altanbonsai
    - light.altanfontan
    - light.garageport
    - light.entrevagg
    - light.sexan
    - light.entrestolpe_v
    - light.entrestolpe_h
    - light.entrebuske

# Twinkly
- platform: command_line
  switches:
    granen:
      command_on: "python3 /config/python_scripts/twinkly.py 192.168.0.26 on"
      command_off: "python3 /config/python_scripts/twinkly.py 192.168.0.26 off" 
#      command_state: "python3 /config/python_scripts/twinkly.py 192.168.0.26 state" # Will interfere with app; only one login token can be active at once...
      value_template: "{{ value == \"1\" }}"
      friendly_name: Gran-twinkly
- platform: command_line
  switches:
    istappar:
      command_on: "python3 /config/python_scripts/twinkly.py 192.168.0.27 on"
      command_off: "python3 /config/python_scripts/twinkly.py 192.168.0.27 off" 
#      command_state: "python3 /config/python_scripts/twinkly.py 192.168.0.27 state" # Will interfere with app; only one login token can be active at once...
      value_template: "{{ value == \"1\" }}"
      friendly_name: Istapp-twinkly
- platform: command_line
  switches:
    slingan:
      command_on: "python3 /config/python_scripts/twinkly.py 192.168.0.28 on"
      command_off: "python3 /config/python_scripts/twinkly.py 192.168.0.28 off" 
#      command_state: "python3 /config/python_scripts/twinkly.py 192.168.0.28 state" # Will interfere with app; only one login token can be active at once...
      value_template: "{{ value == \"1\" }}"
      friendly_name: Sling-twinkly

# Glue Lock from https://github.com/uki-hassio/Glue-Lock
- platform: command_line
  switches:
      friggebod_lock:
          friendly_name: "Olåst <-Friggebod-> Låst"
          command_on: !secret glue_command_on
          command_off: !secret glue_command_off

# Wake on LAN for SpelTV
- platform: wake_on_lan
  name: SpelTV
  mac: 'D4:5D:64:52:12:66'
  host: '192.168.0.7'